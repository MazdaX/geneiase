
1. Installation
1.1 Install R package (library) dependencies by for example 'install.packages("pkg.name")' from within R. The dependencies are:
 - getopt
 - binom
 - VGAM
1.2 Test the installation
 >cd geneiase
 >bin/geneiase -t static -i test/static.test.input.tab -b 100
 >bin/geneiase -t icd -i test/icd.test.input.tab -b 100

1.3 Optionally add the 'geneiase/bin' directory to your shell PATH such that you can execute the program without using the full path.

2. Option help and description
 2.1 Run the programs with the -h flag to get help and a description of each argument.
 2.2 Example of input files you find in the directory 'test'.

3. Output
 A test-statistica, s, is generated for each variant reflecting the effect-size (see paper). In a meta-analysis approach the effect sizes for all variants withing a gene is combined. We provide several simple gene-wise measures based on the variant effect-sizes. The p-value is based on the Liptak-Stouffer method (column liptak.s) and the generation of a null distribution from resampling of a parametric model (see paper).
 feat: FeatureID as specified in the input file (typically a gene identifier)
 n.vars: Number of variants within the gene
 mean.s: Mean of s across the variants within the gene
 median.s: Median of s across the variants within the gene
 sd.s: Standard deviation of s across the variants within the gene
 cv.s: Coefficient of variation of s across the variants within the gene
 liptak.s: Stouffer-Liptak combination of s
 p.nom: Nominal p-value
 fdr: Benjamini-Hochberg corrected p-value

4. Typical workflow for generation of the input table containing allelic read counts
 Unfortunately, we are not aware of any pipeline that on a genome-wide scale is designed for this particular purpose. The generation of allelic counts starting from raw reads can be specific to sequencing technology and desired tools (such as choice of read mapping and variant calling software). However, to facilitate the generation of such a table we list a possible workflow below. 
 1. Quality control of reads, such as trimming (FASTQ)
 2. Map reads (BAM)
 3. Quality control mapped reads, such as PCR duplicate removal
 4. Call variants (VCF)
 5. Filter variants: Heterozygosity, read depth, and satisfying other mapping quality and variant calling criteria
 (5.2. Optional: Assess mapping bias for each variant and either use the mapping bias estimate of each variant in downstream analysis or filter out variants exhibiting mapping bias.)
 (5.3. Optional: If there are several samples from the same individual, such as in the case of cd-ASE, filter out variants which differ between the samples.) 
 6. Annotate variants
 7. Filter on relevant annotation, such as within a gene or presence in dbSNP.
 8. Get allelic counts for filtered variants based on a pileup of mapped reads.
